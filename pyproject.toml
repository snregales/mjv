[tool.poetry]
name = "mjv-todo-api"
version = "0.1.0"
description = "Ministerie van Justitie en Veiligheid TO-DO REST API Assignment"
authors = ["Sharlon N. Regales <sharlonregales@gmail.com>"]
maintainers = ["Sharlon N. Regales <sharlonregales@gmail.com>"]
readme = "README.md"
repository = "https://github.com/equinor/habit"
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
]


[tool.poetry.dependencies]
python = "^3.12"
flask = "^3.0.3"
click = "^8.1.7"

[tool.poetry.group.style.dependencies]
mypy = "*"
ruff = "*"
typeguard = "*"

[tool.poetry.group.docs.dependencies]
mkdocs = "*"
mkdocs-material = "*"
mkdocstrings = {version="*", extras=["python"]}

[tool.poetry.group.dev.dependencies]
pytest = "*"
coverage = {extras = ["toml"], version = "*"}
pre-commit = "*"
pre-commit-hooks = "*"
ipykernel = "*"

[tool.poetry.scripts]
mjv = 'mjv_todo_api.__main__:main'
habit_to_abaqus = 'habit_to_abaqus.__main__:main'

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["mvj-todo-api", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 65

[tool.ruff.lint]
select = [
    "D",  # pydocstyle
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
    "F405",  # undefined * import
    "E722",  # catch all except
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[[tool.mypy.overrides]]
module = ["abaqus.*", "abaqusConstants.*"]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
