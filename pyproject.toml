[tool.poetry]
name = "mjv"
version = "0.1.0"
description = "Ministerie van Justitie en Veiligheid TO-DO REST API Assignment"
authors = ["Sharlon N. Regales <sharlonregales@gmail.com>"]
maintainers = ["Sharlon N. Regales <sharlonregales@gmail.com>"]
readme = "README.md"
repository = "https://github.com/snregales/mjv"
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
]


[tool.poetry.dependencies]  # https://python-poetry.org/docs/master/managing-dependencies/
python = "^3.12"
flask = ">=3.0.3"
click = ">=8.1.7"
flask-restx = "^1.3.0"
flask-sqlalchemy = "^3.1.1"
environs = "^11.0.0"
flask-jwt-extended = "^4.6.0"
flask-bcrypt = "^1.0.1"

[tool.poetry.group.docs.dependencies]  # https://python-poetry.org/docs/master/managing-dependencies/
pdoc = "*"
mkdocs = "*"
mkdocs-material = "*"

[tool.poetry.group.tests.dependencies]  # https://python-poetry.org/docs/master/managing-dependencies/
mypy = "*"
ruff = "*"
typeguard = "*"
pytest = "*"
pytest-click = "*"
coverage = {extras = ["toml"], version = "*"}
pre-commit = "*"
pre-commit-hooks = "*"

[tool.poetry.group.dev.dependencies]  # https://python-poetry.org/docs/master/managing-dependencies/
ipykernel = "*"

[tool.poetry.scripts]
mjv-run = 'mjv.__main__:run'

[tool.pytest.ini_options]  # https://docs.pytest.org/en/latest/reference/reference.html#ini-options-ref
addopts = "--color=yes --failed-first --strict-config --strict-markers --verbosity=2 --junitxml=reports/pytest.xml"
filterwarnings = ["error", "ignore::DeprecationWarning"]
testpaths = ["src", "tests"]
xfail_strict = true

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]  # https://coverage.readthedocs.io/en/latest/config.html#run
branch = true
parallel = true
command_line = "--module pytest"
data_file = "reports/.coverage"
source = ["src", "tests"]

[tool.coverage.xml]  # https://coverage.readthedocs.io/en/latest/config.html#xml
output = "reports/coverage.xml"

[tool.coverage.report]  # https://coverage.readthedocs.io/en/latest/config.html#report
show_missing = true
fail_under = 65
precision = 1
skip_covered = true

[tool.ruff]  # https://github.com/charliermarsh/ruff
fix = true
line-length = 100
src = ["src", "tests"]
target-version = "py312"

[tool.ruff.lint]
select = [
    "D",  # pydocstyle
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
    "F405",  # undefined * import
    "E722",  # catch all except
]
unfixable = ["ERA001", "F401", "F841", "T201", "T203"]

[tool.ruff.lint.pycodestyle]
max-doc-length = 100

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
# Ignore all files that end in `_test.py`.
"*_test.py" = ["D"]
"tests/**/__init__.py" = ["D"]

[tool.mypy]  # https://mypy.readthedocs.io/en/latest/config_file.html
junit_xml = "reports/mypy.xml"
strict = true
disallow_subclassing_any = false
disallow_untyped_decorators = false
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true
exclude = ["conftest.py$"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
